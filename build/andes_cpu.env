#!/bin/bash

# ==============Make sure TF_*_DIR are defined. Sample for Summit:==============
# echo $TF_INCLUDE_DIR 
# /sw/summit/open-ce/anaconda-base/envs/open-ce-1.1.3-py38-0/lib/python3.8/site-packages/tensorflow/include
# echo $TF_LIBRARY_DIR 
# /sw/summit/open-ce/anaconda-base/envs/open-ce-1.1.3-py38-0/lib/python3.8/site-packages/tensorflow

# ==============Compile and run:==============
# Pass the tensorflow flags: gcc example_tensorflowNN_cpu.cpp -I$TF_INCLUDE_DIR -L$TF_LIBRARY_DIR -ltensorflow -o test
# Run the following after `source <machine_name>.env`:
# cd ..
# make
# ./example.exe

module load gcc

# For Andes, the python module does not have the required header files and libraries. Use custom installed TF C++ API
# export TF_DIR=/sw/andes/python/3.7/anaconda-base/lib/python3.7/site-packages/tensorflow_core
export TF_DIR=/ccs/home/muraligm/software/tensorflow_2_8_0_cpp
export TF_INCLUDE_DIR=$TF_DIR/include
export TF_LIBRARY_DIR=$TF_DIR/lib
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$TF_LIBRARY_DIR

export CC=gcc
export CFLAGS="-I${TF_INCLUDE_DIR} -L${TF_LIBRARY_DIR} -ltensorflow"
# Attempt at cmake - Not working yet. TFFLAGS not being linked.
export TFFLAGS="-L${TF_LIBRARY_DIR} -ltensorflow"

